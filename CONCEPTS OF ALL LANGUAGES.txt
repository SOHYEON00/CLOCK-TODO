< CSS >
1. em, px, rem
 1) em, rem : 길이가 유연한 가변 단위. 디자인에 설정된 폰트 크기에 따라 브러우저에 의해 픽셀값으로 변환됨.
ex) 1em , 1rem = 16px ~ 160px 또는 기타 다양한 값으로 변환됨
 2) px : 브러우저에서 '절대값'으로 인식. 항상 표시된 값을 가짐.
 3) em, rem 의 장점 
  - 디자인이 유연해짐, 구성 요소의 크기를 늘리고 줄이는 게 가능 -> 반응형 웹
 4) em, rem 의 차이점
 : 브라우저가 px 값으로 변환활 때 어떻게 변환할 것인지에 따라 사용할 것이 달라짐.
   4-1) rem : 페이지 최상위 (root)요소 = html 요소의 폰트 크기를 기준으로 rem 단위로 지정한 숫자를 곱한 값이 마지막 변환 값. 
   ex) 최상위 폰트크기: 16px일 때, 10rem = 160px (16 * 10)
   4-2) em : 스타일을 지정한 요소의 폰트 크기를 곱한 값 
                       상위 요소의 폰트 크기가 아니라, 실제 사용된 요소의 폰트 크기가 기준
   ex) div의 폰트 크기: 18px일 때, 10em = 180px (10 * 18)
- html의 폰트크기가 지정되지 않았으면, 브라우저 설정값이 기준

결론: rem은 요소의 상속 특성에 상관없이 일관된 크기를 돌려주고 px대신 rem을 사용함으로써 사용자가 설정한 폰트크기에 따라 모든 구성 요소가 적절하게 반응하게 해 줌. 

< JS >

* 현재 페이지 refresh 방법

location.reload(true);
location.href = location.href;

history.go(0);


주제, 기간 , 사용한 언어, 시스템설정, 기반, 몇명 (기본)
과정
본인의 역할
결과적으로 구현
--기본

프로젝트를 정리하면서 할 때 어렵거나 문제상황
--- 프로젝트 

이걸 통해서 자소서, 포폴

1. 다 찾아서 경험 정리하기